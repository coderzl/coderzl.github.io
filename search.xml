<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Hexo + Github Pages 搭建静态博客]]></title>
      <url>%2F2017%2F04%2F16%2Fhexo%2F</url>
      <content type="text"><![CDATA[利用hexo和github pages搭建静态博客，主要操作步骤有： 1、搭建node.js环境 2、安装hexo 3、用hexo初始化生成一个静态博客文件 4、生成静态html页面 5、本地起服务调试 6、配置github仓库地址 7、发布 安装Node.jsURL: 下载 安装Hexo1$ sudo npm install -g hexo 初始化1$ hexo init INFO Start blogging with Hexo! 生成静态页面1$ hexo g 启动服务hexo可以在本地调试，1$ hexo server 配置发布信息Github打开根目录_config.yml 在文件最后，修改deploy节点1234deploy: type: git repository: https://github.com/yourname/yourname.github.io.git branch: master 执行命令1$ npm install hexo-deployer-git --save 发布1$ hexo deploy]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[hexo主题配置]]></title>
      <url>%2F2017%2F04%2F16%2Fhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%2F</url>
      <content type="text"><![CDATA[选择hexo很重要的一个原因就是它丰富的主题，而配置主题的流程也很简单：1、clone主题到本地2、修改_config.yml配置3、重新生成静态页面、发布 下载主题hexo官网有很多丰富的主题，选择一个，进入到它的GitHub页面12$ cd yourBlogdir/themes$ git clone xxx.git 修改配置打开博客根目录下的_config.yml配置文件，找到theme: 节点，将值改成下载的主题名。如：1theme: yilia 重新发布123$ hexo clean //删除本地原有静态页面$ hexo g //重新生成静态页面$ hexo d //发布到GitHub 一个新的主题，肯定会存在一些个性化的配置，这些就需要去看对应主题的相关readme了]]></content>
    </entry>

    
  
  
</search>
